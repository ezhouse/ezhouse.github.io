<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>奥派经济学代表人物:哈耶克</title>
    <link href="/2024/08/09/blog3/"/>
    <url>/2024/08/09/blog3/</url>
    
    <content type="html"><![CDATA[<p>弗里德里希·奥古斯特·冯·哈耶克（Friedrich August von Hayek，1899~1992）出生于奥地利的英国知名经济学家、政治哲学家，1974年诺贝尔经济学奖得主，二十世纪最具影响力的经济学家、政治思想家之一。</p><p>哈耶克的学术生涯主要任教于英国伦敦政治经济学院、美国芝加哥大学以及德国弗赖堡大学，他被广泛视为奥地利经济学派最重要的成员之一。哈耶克的他坚持古典自由主义、个人主义、自由市场资本主义，反对社会主义、极权主义、凯恩斯主义和集体主义，其著作《通往奴役之路》累计销售量超过200万册（截止2010年），主要代表作包括《通往奴役之路》《自由宪章》《致命的自负》《自由秩序原理》等。</p><p><img src="/images/Hayek.jpg" alt="哈耶克" title="哈耶克1899-1992"></p>]]></content>
    
    
    
    <tags>
      
      <tag>哲学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一小时学会Markdown</title>
    <link href="/2024/08/08/blog4/"/>
    <url>/2024/08/08/blog4/</url>
    
    <content type="html"><![CDATA[<p>Markdown 无处不在。StackOverflow、CSDN、简书、GitBook、有道云笔记等。主流的代码托管平台，如 GitHub、Gitee 等等，都支持 Markdown 语法，很多开源项目的 README、开发文档、帮助文档、Wiki 等都用 Markdown 写作。</p><p>Markdown 是纯文本可移植的。几乎可以使用任何应用程序打开包含 Markdown 格式的文本文件。与 Microsoft Word 等文字处理应用程序形成了鲜明的对比，Microsoft Word 将你的内容锁定在专有文件格式中。</p><p>Markdown 是独立于平台的。你可以在运行任何操作系统的任何设备上创建Markdown 格式的文本。</p><p>Markdown 能适应未来的变化。即使你正在使用的应用程序将来会在某个时候不能使用了，你仍然可以使用文本编辑器读取 Markdown 格式的文本。</p><p>写Hexo Blog也得学会Markdown, 它有大用但并不难学，一个小时就足够了。</p><h2 id="Markdown-基本语法"><a href="#Markdown-基本语法" class="headerlink" title="Markdown 基本语法"></a>Markdown 基本语法</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs clean">标题: #、##、### 分别表示<span class="hljs-number">1</span>~<span class="hljs-number">3</span>级标题， 最多可以是<span class="hljs-number">6</span>级<br>强制换行： &lt;br&gt; 标签 <br>粗体： 前后各添加<span class="hljs-number">2</span>个星号下划线， ** 内容 **<br>斜体： 前后添加<span class="hljs-number">1</span>个星号或下划线， * 内容 *<br>粗体和斜体：前后添加<span class="hljs-number">3</span>个星号或下划线，*** 内容 ***<br>删除线：删除单词，请在单词前后使用两个波浪号~~<br>引用：段落前添加一个 &gt; 符号<br>表格：用三个或多个连字符（---）创建每列的标题，并使用管道（|）分隔每列。您可以选择在表的任一端添加管道<br>围栏式代码块： 用三个代码块之前和之后的行上使用三个反引号（```）或三个波浪号（~~~），这样引用的代码就当成一段普通文字，而不是当成代码了。<br>转义字符语法：原本用于格式化 Markdown 文档的字符，比如\、*、<span class="hljs-string">&#x27;、_、&#123;&#125;、[]，这些字符前面添加反斜杠字符 \之后，就只会当成\*&#123;&#125;[]等本身的符号来处理，不作格式用了。 </span><br></code></pre></td></tr></table></figure><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">方法1:  插入图片Markdown语法代码：     ![图片alt](图片链接 <span class="hljs-string">&quot;图片title&quot;</span>)。<br>方法2:  直接插入HTML代码：       &lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;图片链接&quot;</span> <span class="hljs-attribute">alt</span>=<span class="hljs-string">&quot;图片alt&quot;</span> <span class="hljs-attribute">title</span>=<span class="hljs-string">&quot;图片title&quot;</span>&gt;<br></code></pre></td></tr></table></figure><h2 id="给图片增加链接"><a href="#给图片增加链接" class="headerlink" title="给图片增加链接"></a>给图片增加链接</h2><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[<span class="hljs-name">!</span>[<span class="hljs-name">图片</span>](<span class="hljs-name">/img/image.jpg</span> <span class="hljs-string">&quot;name&quot;</span>)](<span class="hljs-name">https://link.com</span>)<br></code></pre></td></tr></table></figure><h2 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">方法<span class="hljs-number">1</span>:     [Name](<span class="hljs-keyword">https</span>://link.com/ <span class="hljs-string">&quot;显示名&quot;</span>) <br>方法<span class="hljs-number">2</span>:     &lt;<span class="hljs-keyword">a</span> href=<span class="hljs-string">&quot;超链接地址&quot;</span> title=<span class="hljs-string">&quot;title&quot;</span>&gt;超链接显示名&lt;/<span class="hljs-keyword">a</span>&gt;<br></code></pre></td></tr></table></figure><h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2><p>内容改编、摘抄自 <a href="https://markdown.com.cn/basic-syntax/" title="Markdown教程">Markdown官网文档</a> ：指令</p>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Blog 技术贴： Hexo+Github+Cloudflare</title>
    <link href="/2024/08/07/blog2/"/>
    <url>/2024/08/07/blog2/</url>
    
    <content type="html"><![CDATA[<p>在折腾过程中，虽已经有各种技术贴作参考，但各人有各人的环境和需求，实现的方法也不尽相同。以下是Blog成功上线的全过程，可分为几大步骤：</p><ol><li>环境准备 →  2. 本地调试  → 3. 上传Github  →  4. 接入Cloudflare</li></ol><h2 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h2><h3 id="申请帐号"><a href="#申请帐号" class="headerlink" title="申请帐号"></a>申请帐号</h3><p>环境准备对于不同人有所不同。需要用的帐号有：</p><ul><li><a href="https://www.namesilo.com/" target="_blank" rel="nofollow noopener"><span>Namesilo</span></a>:  Namesilo就是个域名的知名大卖家，当然也可以换成其它卖家。Namesilo促销时常有1美刀的deal。</li><li><a href="https://www.github.com/" target="_blank" rel="nofollow noopener"><span>Github</span></a>:  码农的世界，1G免费空间可来托管Blog；Github上有太多新鲜、炫酷的东东了…</li><li><a href="https://www.cloudflare.com/" target="_blank" rel="nofollow noopener"><span>CloudFlare</span></a>:  托管DNS，并可以利用cloudflare强大的CDN加速功能，代理网站，网络安全及其它太多福利，江湖人送外号：大善人。部署在CF上还可解决在宋国访问不畅的问题。</li></ul><p>   进入上面的网站，分别申请帐号。前面2个帐号是必须用到的，CF是可选项。</p><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><p>在Namesilo上选择自己喜欢的域名，加入购物车，付账。 新帐号用优惠码freefornew 或 1bonus立省1美刀。<br>Namesilo最好把选择“Keep my information private”，保护个人信息。<br>虽然有好些网站提供免费的一级或者二级域名，但终究是人家的东西。随时可能被收回不说，自选DNS，自建邮箱这些都没法玩了。总之，这个域名钱还是不要省了。<br>购买域名的时候土豪们可以选择同时购买邮箱。如果不想付钱，也可以用Cloudflare的免费服务，效果没啥区别。</p><h3 id="托管DNS"><a href="#托管DNS" class="headerlink" title="托管DNS"></a>托管DNS</h3><p>托管DNS是为了在CF上可以更方便地用它。登录Cloudflare后:<br>添加站点 → 输入购买的域名 → DNS记录 → Cloudflare名称服务器， 复制NS值 → 回Namesilo;<br>Namesilo: Manage My Domains → domain manager → 选择刚刚买的域名 → NameServer 1, 2 修改为 Cloudflare 的NS 1，2 剩余的NameServer全部删除 → 至此，DNS托管到Cloudflare了。<br>NameSilo每年来续下费就好，其它没它什么事了。DNS设置好，一般几个小时之内就可以正常使用了。</p><h3 id="域名的其它用途"><a href="#域名的其它用途" class="headerlink" title="域名的其它用途"></a>域名的其它用途</h3><ul><li>如果自己有NAS，可以将域名解析到NAS的公网IP，从而在外网使用自己的数据。比起群晖的Quickconnect不知道要快到哪里去了。Blog也可以将NAS上的各种应用的Link放在上面，怕要爽到家了。</li><li>利用CF的邮箱功能，开设自己的邮箱服务。比如自己的域名是example.com; 设个<a href="mailto:&#117;&#115;&#101;&#114;&#x31;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#108;&#x65;&#46;&#99;&#x6f;&#109;">&#117;&#115;&#101;&#114;&#x31;&#x40;&#x65;&#x78;&#97;&#109;&#112;&#108;&#x65;&#46;&#99;&#x6f;&#109;</a>的一次性邮箱，在注册各种网站时使用，可以避免后续无穷无尽的垃圾信息。</li><li>私有云随时备份手机照片，手机的内存再也不是问题了。</li></ul><h3 id="安装Node-js-Git-Hexo-Visual-Studio-Code"><a href="#安装Node-js-Git-Hexo-Visual-Studio-Code" class="headerlink" title="安装Node.js, Git, Hexo, Visual Studio Code"></a>安装Node.js, Git, Hexo, Visual Studio Code</h3><p>静态Blog可用不同的技术实现，比如Jekyll, Hugo, Hexo等。Hexo可以在本地PC上调试好，再上传到Github上，命令少，相对容易记，这次就选它了。<br>N年来用习惯了图形界面，鼠标操作，一下回到命令行，多少有点陌生。<br>按顺序安装： node.js → Git → Hexo → Visual Studio Code</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Node.js 是一个免费、开源、跨平台的 JavaScript 运行时环境，它让开发人员能够创建服务器、Web 应用、命令行工具和脚本。Hexo就是在Node.js上开发的，必须有它Hexo才能运行。直接在<a href="https://nodejs.org/" target="_blank" rel="nofollow noopener"><span>Node.js官网</span></a>下载。</p><p>安装完成之后，进入命令行程度，比如Windows自带的cmd:   windows搜索：“cmd”，选择“命令提示符”；或者 Win键+R直接打开：cmd。<br>出现命令提示符C:\后，输入：“npm -v”  查询npm版本号。<br>如果得到类似 “10.8.1” 这样的npm版本号，表明node.js安装成功。</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>Git是个版本控制系统，每次提交更新或保存项目状态时，它就会对当时的全部文件创建一个快照，并保存这个快照的索引。如果只是为了搭建Blog，就当它是个必要的软件，在后台默默地工作。下载地址：<a href="https://git-scm.com/download/win" target="_blank" rel="nofollow noopener"><span>Git官网&#x2F;Download</span></a></p><p>安装完成后，同样进入命令行检查版本号， 输入：  git -v<br>得到类似“git version 2.45.2.windows.1” 这样的结果，表明安装完成。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在命令行执行：npm install hexo-cli -g<br>安装完成后，同样进入命令行检查版本号， 输入：  hexo -v<br>得到类似“hexo: 7.3.0” 这样的结果，表明安装完成。</p><p>在这里顺便安装一个Hexo插件，将来上传Github时必须要用。<br>命令行执行： npm install hexo-deployer-git --save</p><p>可选的插件：</p><ol><li><p>阅读时长：npm install hexo-symbols-count-time</p></li><li><p>emoji：原将 markdown 变成 html 的转换器叫做markdown渲染器，不支持插件，需要替换为markdown-it渲染器。</p><p>   $ npm un hexo-renderer-marked --save<br>   $ npm i hexo-renderer-markdown-it --save<br>   npm install markdown-it-emoji --save</p></li><li><p>编辑数学公式：npm install hexo-renderer-kramed --save</p></li><li><p>显示图片：npm install hexo-asset-img --save</p></li></ol><h3 id="安装Visual-Studio-Code"><a href="#安装Visual-Studio-Code" class="headerlink" title="安装Visual Studio Code"></a>安装Visual Studio Code</h3><p>visual studio code是微软家的免费软件，可以写各种程序的代码。直接在<a href="https://code.visualstudio.com/" target="_blank" rel="nofollow noopener"><span>Visual studio code官网</span></a>下载回来安装。<br>这个是图形界面的，安装完成可在桌面生成Visual studio code图标。</p><p>至此，环境准备完成。</p><h2 id="2-本地调试"><a href="#2-本地调试" class="headerlink" title="2. 本地调试"></a>2. 本地调试</h2><p>相对准备工作来说，这个就简单多了。</p><h3 id="准备文件夹"><a href="#准备文件夹" class="headerlink" title="准备文件夹"></a>准备文件夹</h3><p>在本地硬盘上生成一个文件夹用来放blog文件。比如, D:\blog<br>进入命令行： C:&gt;   →  输入命令：d: 回车   →  输入命令：md blog  回车  →  cd d:\blog 回车<br>正常的话，命令行提示符变成了： d:\blog&gt;<br>此时所有文件操作都变成在d:\blog这个文件夹下面了。</p><h4 id="生成blog"><a href="#生成blog" class="headerlink" title="生成blog"></a>生成blog</h4><p>命令行执行： d:\blog&gt;hexo init<br>等待….<br>若无意外， 本地Blog已生成。</p><p>命令行： d:\blog&gt; hexo s<br>得到：<br>INFO  Hexo is running at <a href="http://localhost:4000/">http://localhost:4000/</a> . Press Ctrl+C to stop.</p><p>用浏览器访问上述网址，即可浏览本地Blog毛坯房。</p><h3 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h3><p>原配的landscape主题有点太过朴实，必须换掉。在 <a href="https://hexo.io/themes/" target="_blank" rel="nofollow noopener"><span>Hexo主题</span></a>提供了407个主题供选择。看中那个就clone回来, 例如本Blog用的Fluid。</p><p>命令行： npm install --save hexo-theme-fluid<br>或者，找到Github连接后， Code中下载ZIP文件回来解压。</p><p>命令的后面的参数是保存的位置，自行修改。注意需要将下载回来的文件放在blog&#x2F;themes文件夹中。<br>也可以放在其它地方，复制一份过来。万一玩坏了，还有个备份。</p><p>打开visual studio code, 将D:\blog拖到窗口里，即可修改里面的各个文件了。</p><p>文件：_config.yml   →   文件最下部：将theme: landscape, 修改为： theme: fluid  →  保存<br>回命令行：  </p><p>hexo clean   &#x2F;&#x2F;清除缓存。有时明明修改了内容，浏览器看到的却是旧版，多数跟缓存有关，稍等一下刷新就好。<br>hexo server  &#x2F;&#x2F;可以省略为 hexo s</p><p>再次用浏览器打开<a href="http://localhost:4000/">http://localhost:4000/</a>  即可看到修改的的主题。<br>多尝试几个，找到自己喜欢的。</p><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>首先要安装说上面的图片插件hexo-asset-image, 然后修改：_config.yml    →    post_asset_folder: true，使每个Post均有独立文件夹，将需要的本地图片放在其中。post中引用图片的有4种方法，可参考<a href="https://fuhailin.github.io/Hexo-images/" target="_blank" rel="nofollow noopener"><span>Github赵大宝的网页</span></a>。以下是其中2种：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">方法<span class="hljs-number">1</span>：<br>     &lt;<span class="hljs-selector-tag">div</span> align=<span class="hljs-attribute">right</span>&gt;         // 对齐方式： right, center, left<br>     &lt;<span class="hljs-selector-tag">img</span> <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;image.png&quot;</span> width=<span class="hljs-string">&quot;100%&quot;</span> height=<span class="hljs-string">&quot;100%&quot;</span> title=<span class="hljs-string">&quot;text&quot;</span> alt=<span class="hljs-string">&quot;alternative text.&quot;</span>/&gt;   //文件名，比例,替代名<br>     &lt;/div&gt;<br><br>方法<span class="hljs-number">2</span>： <br>      !<span class="hljs-selector-attr">[显示的名字]</span>(/images/<span class="hljs-selector-tag">image</span><span class="hljs-selector-class">.jpg</span> )<br></code></pre></td></tr></table></figure><h3 id="Hexo-常用命令"><a href="#Hexo-常用命令" class="headerlink" title="Hexo 常用命令"></a>Hexo 常用命令</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs verilog">Hexo init         <span class="hljs-comment">//在指定的文件夹初始化Hexo</span><br>Hexo clean        <span class="hljs-comment">//清除缓存</span><br>Hexo <span class="hljs-keyword">generate</span>     <span class="hljs-comment">//可省略为Hexo g， 生成静态文件。</span><br>Hexo <span class="hljs-keyword">new</span> post <span class="hljs-string">&quot;post&quot;</span>      <span class="hljs-comment">// 创作一篇post</span><br>Hexo <span class="hljs-keyword">new</span> draft <span class="hljs-string">&quot;draft1&quot;</span>      <span class="hljs-comment">// 创作一篇草稿</span><br>Hexo publish <span class="hljs-string">&quot;draft1&quot;</span>    <span class="hljs-comment">//发表草稿draft1</span><br>Hexo server              <span class="hljs-comment">//可省略为Hexo s， 在本地运行Hexo</span><br>Hexo s --draft            <span class="hljs-comment">// 本地预览草稿</span><br>Hexo deploy       <span class="hljs-comment">//Hexo d 上传到Github</span><br></code></pre></td></tr></table></figure><h2 id="3-上传Github"><a href="#3-上传Github" class="headerlink" title="3. 上传Github"></a>3. 上传Github</h2><h3 id="创建新仓库repository"><a href="#创建新仓库repository" class="headerlink" title="创建新仓库repository"></a>创建新仓库repository</h3><p>打开 <a href="https://github.com/" target="_blank" rel="nofollow noopener"><span>Github官网</span></a>。<br>新建一个repository(仓库)，名称必须严格按照 username.github.io 的格式来命名。 直接创建，不需要修改内容。</p><h3 id="创建密钥-Key"><a href="#创建密钥-Key" class="headerlink" title="创建密钥 Key"></a>创建密钥 Key</h3><p>命令行： ssh-keygen -t ed25519 -C “email address”</p><p>其中，ed25519是选择的密钥算法。密钥算法有好多，rsa、ed25519等等，ed25519从速度和安全性都好过rsa; rsa的用的人多，兼容性更好。</p><p>按提示填写生成的文件路径和文件名，生成一个.pub文件。打开之后，复制全部内容。<br>回Github，选择刚刚创造的 repository（仓库） → Setting → Deploy Keys → Add deploy key，随便取个名字，将复制的内容粘贴在Key里面，保存。</p><h3 id="部署上线"><a href="#部署上线" class="headerlink" title="部署上线"></a>部署上线</h3><p>回到 visual studio code<br>打开 .config.yml 最下部 Deployment，修改为：</p><blockquote><pre><code class="hljs">   deploy:   type: &#39;git&#39;   repo: https://github.com/username/username.github.io    →  把username换成自己的帐户名   branch: master</code></pre><p>保存。</p></blockquote><p>回到命令行：<br>hexo clean        &#x2F;&#x2F; 清除缴存<br>hexo generate     &#x2F;&#x2F; 可省略为hexo g, 重新生成静态文件<br>hexo deploy       &#x2F;&#x2F; 可省略为hexo d, 上传到Github， 之后每次有修改，或写了新blog都这样上传更新后的文件。</p><p>至此，blog已经可以在<a href="https://username.github.io正常访问了/">https://username.github.io正常访问了</a>    →  把username换成自己的帐户名<br>Github也可以把域名改成自己的。如果不想用Cloudflare的福利，blog至此完工。</p><p>另外，若身处宋国，连接不了Github实属正常；如果得到这样的结果：<br>fatal: unable to access ‘<a href="https://github.com/username/username.github.io/">https://github.com/username/username.github.io/</a>‘: Failed to connect to github.com port 443 after 21096 ms: Couldn’t connect to server  </p><p>选个黄道吉日、多试几次或者科学上网都可以解决问题。</p><h2 id="4-接入Cloudflare"><a href="#4-接入Cloudflare" class="headerlink" title="4. 接入Cloudflare"></a>4. 接入Cloudflare</h2><p>在此前须已经将新购域名托管在CF上。</p><p>登录CF  →  Workers and Pages  →  创建  → Pages (不是创建Worker)  →  连接到Git  →  Github  →  选择刚刚在Github创建的 username.github.io   →  开始设置  </p><p>项目名称： 给取个名字；<br>生产分支： master<br>框架预设： none<br>构建命令： npx hexo generate<br>输出目录： 留空</p><p>→  保存并部署  →  继续处理项目  →  自定义域  →  设置自定义域   →  写入自已的域名，比如： blog.XXXX.com  →  稍等半小时，即可用刚填的地址访问Blog</p><p>走到这里，恭喜崭新的Blog主诞生了！！</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>虽是纯文字版的记录，没有图文版的形象、易懂，在这个脑力宝贵的年代，人们更愿意读图文版的傻瓜书；不过，文字版的逻辑性更强，不仅能知其然，也能知其所以然，不会被图片打断思路。</p><p>图文版教程在参考网站中可以找到。</p><h2 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h2><p>感谢以下参考内容，排名不分先后。</p><ol><li><a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="nofollow noopener"><span>Hexo 官网文档</span></a>：指令</li><li><a href="https://hexo.io/themes/" target="_blank" rel="nofollow noopener"><span>Hexo 官网主题</span></a>：Themes</li><li><a href="https://hexo.fluid-dev.com/docs/guide/" target="_blank" rel="nofollow noopener"><span>Hexo Fluid 用户手册</span></a>：配置指南</li><li><a href="https://zhenggao.io/blog/2019/12/10/%E5%AE%89%E8%A3%85%E5%B9%B6%E9%83%A8%E7%BD%B2Hexo-Next%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2/#:~:text=%E6%AD%A4%E5%A4%84%E5%BB%BA%E8%AE%AE%E5%85%88%E6%8A%8A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%BA%90%E4%BB%A3%E7%A0%81%E4%B8%8A%E4%BC%A0%E5%88%B0github%E4%B8%AD%EF%BC%88%E6%AF%94%E5%A6%82%20https%3A%2F%2Fgithub.com%2FRoyZhengGao%2Fblog-source-code%EF%BC%89%EF%BC%8C%E7%84%B6%E5%90%8E%E5%9C%A8%E6%96%B0%E7%9A%84%E7%94%B5%E8%84%91%E4%B8%8A%E7%94%A8git%20%E5%91%BD%E4%BB%A4%E6%8A%8A%E6%BA%90%E4%BB%A3%E7%A0%81clone%E4%B8%8B%E6%9D%A5%E3%80%82%20%E8%BF%99%E6%A0%B7%E7%9A%84%E8%AF%9D%EF%BC%8C%E6%9C%AC%E8%BA%AB%E7%9A%84%E6%BA%90%E4%BB%A3%E7%A0%81%E4%B8%AD%E8%AE%BE%E7%BD%AE.gitignore%E6%96%87%E4%BB%B6%EF%BC%8C%E8%83%BD%E6%8A%8A%E4%B8%80%E4%BA%9B%E7%94%9F%E6%88%90%E7%9A%84%E6%96%87%E4%BB%B6%E8%BF%87%E6%BB%A4%E6%8E%89%EF%BC%8C%E8%80%8C%E5%8F%AA%E4%BF%9D%E5%AD%98%E6%A0%B8%E5%BF%83%E7%9A%84%E6%BA%90%E6%96%87%E4%BB%B6%E3%80%82%20%E5%9C%A8%E6%96%B0%E7%9A%84%E7%94%B5%E8%84%91%E4%B8%AD%E9%9C%80%E8%A6%81%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85nodejs%3A%20brew%20install%20node,install%20-g%20hexo-cli%20%E6%8A%8A%E4%B9%8B%E5%89%8D%E7%9A%84%E5%AE%89%E8%A3%85%E9%9C%80%E8%A6%81%E7%9A%84npm%E5%8C%85%E5%86%8D%E9%87%8D%E6%96%B0%E8%A3%85%E4%B8%80%E9%81%8D%EF%BC%9Anpm%20install%20hexo%20--save%20%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%9C%A8%E6%96%B0%E7%9A%84%E7%94%B5%E8%84%91%E4%B8%8A%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%BB%A7%E7%BB%AD%E5%86%99%E5%8D%9A%E5%AE%A2%E4%BA%86%EF%BC%81" target="_blank" rel="nofollow noopener"><span>高正太的自留地</span></a>：安装并部署Hexo NexT主题博客</li><li><a href="https://tech.yemengstar.com/hexo-tutorial-deploy-githubpages-beginner/" target="_blank" rel="nofollow noopener"><span>夜梦星尘の折腾日记</span></a>：HEXO系列教程 | 使用GitHub部署静态博客HEXO | 小白向教程</li><li><a href="https://hexo.leelurker.com/posts/18142" target="_blank" rel="nofollow noopener"><span>LeeLurker </span></a>：Cloudflare Pages + Hexo 搭建个人博客</li><li><a href="https://www.bilibili.com/read/cv32465194/" target="_blank" rel="nofollow noopener"><span>B站：小凡同学学AI</span></a>：hexo + github + cloudflare，有手就行的个人博客免费部署</li><li><a href="https://www.iconfont.cn/?spm=a313x.home_index.i3.2.184a3a81ze9PEi" target="_blank" rel="nofollow noopener"><span>iconfont素材库</span></a>：阿里家的免费素材库，图标、插画、字体等。</li><li><a href="https://fuhailin.github.io/Hexo-images/" target="_blank" rel="nofollow noopener"><span>Github: 赵大宝</span></a>：在Hexo博客中插入图片的各种方式</li><li><a href="https://blog.csdn.net/liuhp123/article/details/120010863" target="_blank" rel="nofollow noopener"><span>CSDN：小达不溜儿</span></a>：Hexo博客插入本地图片、Markdown图片设置图片位置和大小</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>折腾Blog</title>
    <link href="/2024/08/05/blog1/"/>
    <url>/2024/08/05/blog1/</url>
    
    <content type="html"><![CDATA[<p>经济下行，工作也有了闲暇，动了做网站的念头。于是，从小白开始零基础折腾Blog。</p><p>首先需要克服的便是各种技术用语。 Hexo, Git, Github, Cloudflare ….对于小白都是拦路虎。好在有万能的搜索引擎，和各路技术大牛的无私教程。历经2个月，路人甲的Blog终于布署上线了。 </p><p>加上之前整理的Calibre Web电子书屋等，都可以集中在自己的一片小天地里，为自己生活工作提供便利。</p><p>正应了老话：掉进水里，只要不停扑腾，终有上岸的一天 ….</p><p>感谢<a href="https://hexo.fluid-dev.com/docs/contribute/#%E4%BB%A3%E7%A0%81%E8%B4%A1%E7%8C%AE%E8%80%85" target="_blank" rel="nofollow noopener"><span>Hexo Fluid Theme代码组</span></a>各位无私奉献了Hexo Fluid Theme代码，使此Blog能上线。</p><div align=right><img src="/images/average_joe_Discipuli Britannica.png" width=30%></div>]]></content>
    
    
    
    <tags>
      
      <tag>心得</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
